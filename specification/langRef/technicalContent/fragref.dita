<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "reference.dtd">
<reference id="fragref" xml:lang="en-us">
  <title><xmlelement>fragref</xmlelement></title>
  <shortdesc>A fragment reference is the mechanism for referencing a syntax fragment within the same
    syntax diagram.</shortdesc>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>syntax diagram
          domain<indexterm><xmlelement>fragref</xmlelement></indexterm></indexterm>
        <indexterm>syntax diagrams<indexterm>fragment references</indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <refbody>
    <section id="usage-information">
      <title>Usage information</title>
      <p>The <xmlelement>fragref</xmlelement> element is used to reference a syntax fragment
        multiple times or pull a large section of syntax out of line for easier reading.</p>
    </section>
    
<section id="specialization-hierarchy">
<title>Specialization hierarchy</title>
<p>The <xmlelement>fragref</xmlelement> element is specialized from <xmlelement>xref</xmlelement>.
        It is defined in the syntax-diagram domain module, which is a specialization of the
        programming domain module.</p>
</section>
    <section conkeyref="content-models-fragref/fragref.element" id="content-model"/>
    <section id="attributes">
      <title>Attributes</title>
      <p>The following attributes are available on this element: <ph
          conkeyref="reuse-attributes/ref-universalatts"/> and <xref
          keyref="attributes-common/attr-href"><xmlatt>href</xmlatt></xref>.</p>
      <p id="attr-exception" outputclass="attr-exception">For this element:<ul id="ul_yvj_42j_spb">
          <li>The <xmlatt>href</xmlatt> attribute is a reference to a syntax diagram
              <xmlelement>fragment</xmlelement>. The referenced <xmlelement>fragment</xmlelement>
            must be in the same diagram as the <xmlelement>fragref</xmlelement> element.</li>
          <li>The <xmlatt>importance</xmlatt> attribute is limited to the values
              <keyword>optional</keyword>, <keyword>required</keyword>, or
              <keyword>-dita-use-conref-target</keyword>.</li>
        </ul></p>
    </section>
    <example id="example" otherprops="examples">
      <title>Example</title>
      <p>The following code sample shows how the
          <xmlelement>fragref</xmlelement> element can be used to break out
        a set of related logging options from the larger set of syntax. The
          <xmlelement>fragref</xmlelement> element is part of the program
        sequence after an input file, but the syntax for logging is defined
        outside of the main diagram.</p>
      <codeblock id="example-fragref">&lt;syntaxdiagram frame="none">
  &lt;title>CopyFile&lt;/title>
  &lt;groupseq>&lt;kwd>COPYF&lt;/kwd>&lt;/groupseq>
  &lt;groupcomp>&lt;var>input-filename&lt;/var>&lt;kwd>*INFILE&lt;/kwd>&lt;/groupcomp>
  &lt;groupseq>&lt;var>output-filename&lt;/var>&lt;kwd>*OUTFILE&lt;/kwd>&lt;/groupseq>
  <b>&lt;fragref href="#./overlay"/></b>
  &lt;groupchoice>&lt;var>input-filename&lt;/var>&lt;kwd>*INFILE&lt;/kwd>&lt;/groupchoice>
  &lt;groupchoice>&lt;var>output-filename&lt;/var>&lt;kwd>*OUTFILE&lt;/kwd>&lt;/groupchoice>
  &lt;fragment id="overlay">
    &lt;title>Overlay&lt;/title>
    &lt;groupchoice>&lt;kwd>*OVERLAP&lt;/kwd>&lt;kwd>*Prompt&lt;/kwd>&lt;/groupchoice>
  &lt;/fragment>
&lt;/syntaxdiagram></codeblock>
      <!--<ph>might</ph> produce output like the following:<pre xml:space="preserve">CopyFile

&gt;&gt;-COPYF-\-input-filename*INFILE-\-output-filename-\-*OUTFILE-\-\-\-\-\-&gt;

&gt;-\-| Overlay |-\-+-input-filename-+-\-+-output-filename-+-\-\-\-\-\-\-\-&gt;&lt;
                '-*INFILE-\-\-\-\-\-\-\-'  '-*OUTFILE-\-\-\-\-\-\-\-'

Overlay

|-\-+-*OVERLAP-+-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-|
   '-*Prompt-\-'</pre>-->
    </example>
  </refbody>
</reference>
