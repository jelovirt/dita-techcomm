<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="systemoutput" xml:lang="en-us">
  <title><xmlelement>systemoutput</xmlelement></title>
  <shortdesc><ph rev="review-c">System output is content that a computer or device generates in
      response</ph> to a command or situation.</shortdesc>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>software<indexterm>system outputs</indexterm></indexterm>
        <indexterm>software
          domain<indexterm><xmlelement>systemoutput</xmlelement></indexterm></indexterm>
        <indexterm>system outputs</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <refbody>
    <section id="specialization-hierarchy">
      <title>Specialization hierarchy</title>
      <p>The <xmlelement>systemoutput</xmlelement> element is specialized from
          <xmlelement>ph</xmlelement>. It is defined in the software domain module.</p>
    </section>
    <section conkeyref="content-models-systemoutput/systemoutput.element" id="content-model"/>
    <section id="attributes">
      <title>Attributes</title>
      <p conkeyref="reuse-attributes/universal-keyref"/>
    </section>
    <example id="example" otherprops="examples">
      <title>Example</title>
      <p>In the following code sample, the <xmlelement>systemoutput</xmlelement> element identifies
        an application response to user input:</p>
      <codeblock>&lt;p&gt;After you type &lt;userinput&gt;mealplan dinner&lt;/userinput&gt;, the meal planning program
will print <b>&lt;systemoutput&gt;</b>For what day?<b>&lt;/systemoutput&gt;</b>.
Reply by typing the day of the week for which you want a meal plan,
for example, <b>&lt;userinput&gt;</b>Thursday<b>&lt;/userinput&gt;</b>.&lt;/p&gt;</codeblock></example>
  </refbody>
</reference>
