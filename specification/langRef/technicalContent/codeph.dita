<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="codeph" xml:lang="en-us">
  <title><xmlelement>codeph</xmlelement></title>
  <shortdesc rev="review-c">A code phrase is a small portion of source code, machine code, or text that is displayed in-line.</shortdesc>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>code<indexterm>phrases</indexterm></indexterm>
        <indexterm>programming<indexterm>code<indexterm>phrases</indexterm></indexterm></indexterm>
        <indexterm><indexterm>programming
              domain<indexterm><xmlelement>codeph</xmlelement></indexterm></indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <refbody>
    <section id="rendering-expectations" rev="review-c">
      <title>Rendering expectations</title>
      <p>The content of the <xmlelement>codeph</xmlelement> element is typically rendered in a
        monospaced font.</p>
    </section>
    <section id="specialization-hierarchy">
      <title>Specialization hierarchy</title>
      <p>The <xmlelement>codeph</xmlelement>
        <ph rev="review-c">element</ph> is specialized from <xmlelement>ph</xmlelement>. It is
        defined in the programming domain module.</p>
    </section>
    <section conkeyref="content-models-codeph/codeph.element" id="content-model"/>
    <section id="attributes">
      <title>Attributes</title>
      <p conkeyref="reuse-attributes/universal-keyref"/>
    </section>
    <example id="example" otherprops="examples">
      <title>Example</title>
      <p>In the following code sample, the <xmlelement>codeph</xmlelement> element identifies a code
        snippet. The code snippet will be rendered in-line in the paragraph.</p>
      <codeblock>&lt;p&gt;The second line of the sample program code, <b>&lt;codeph&gt;</b>Do forever<b>&lt;/codeph&gt;</b>, 
represents the start of a loop construct.&lt;/p&gt;</codeblock></example>
  </refbody>
</reference>
