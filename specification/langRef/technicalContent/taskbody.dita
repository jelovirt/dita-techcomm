<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="taskbody" xml:lang="en-us">
<title><xmlelement>taskbody</xmlelement></title>
<shortdesc>The <xmlelement>taskbody</xmlelement> element contains the body
    of a task topic. The task body can include prerequisites, contextual
    information, steps, results, examples, troubleshooting information, and
    post-requisites. General task topics can also contain generic
    sections.</shortdesc>
<prolog><metadata>
<keywords><indexterm><xmlelement>taskbody</xmlelement></indexterm><indexterm>task elements<indexterm><xmlelement>taskbody</xmlelement></indexterm></indexterm>
</keywords>
</metadata></prolog>
<refbody>
      <section id="usage-information">
      <title>Usage information</title>
      <p>The content model for the task topic varies depending on whether
        the strict task or general task document-type shell is used.</p>
    </section>
<section id="specialization-hierarchy">
<title>Specialization hierarchy</title>
<p>The <xmlelement>taskbody</xmlelement> element is specialized from <xmlelement>body</xmlelement>.
                        It is defined in the task module.</p>
</section>
<section conkeyref="content-models-taskbody/taskbody.element" id="content-model"/>
<section id="attributes"><title>Attributes</title>
                  <p conkeyref="reuse-attributes/only-universal"/>
   </section>
<example id="example" otherprops="examples">
<title>Examples</title>
      <p>This section contains examples of the
          <xmlelement>taskbody</xmlelement> element in both (strict) task
        and general task topics.</p>
      <fig>
        <title>Strict task topic</title>
        <p>The following code sample shows how the
            <xmlelement>taskbody</xmlelement>element contains the main
          building blocks of a strict task topic:</p>
        <codeblock>&lt;task id="Generating-stub-files" xml:lang="en-us">
  &lt;title>Generating stub files&lt;/title>
  &lt;shortdesc>You can use Task Modeler to generate stub files. Stub files are DITA files 
             that contain only a title.&lt;/shortdesc>
  <b>&lt;taskbody></b>
    &lt;prereq>You must have created a DITA map in Task Modeler.&lt;/prereq>
    &lt;context>As you perform this procedure, you can select the conventions that you want to 
             use for file names.&lt;/context>
    &lt;steps>
      &lt;!-- ... -->
    &lt;/steps>
    &lt;result>In the File Manager view, you can see the file names and paths of the DITA
            topics.&lt;/result>
    &lt;tasktroubleshooting>If you cannot see the file name and paths of the DITA topics, refresh
            the view.&lt;/tasktroubleshooting>
    &lt;example> &lt;! -- ... --> &lt;/example>
    &lt;postreq>You now can create a relationship table to define links between the topics in 
             your DITA map.&lt;/postreq>
  <b>&lt;/taskbody></b>
&lt;/task></codeblock>
        <p>In a strict task topic, while the child elements of
            <xmlelement>taskbody</xmlelement> are all optional, they can
          only occur once and must appear in a specific order.</p>
      </fig>
      <fig rev="review-a">
        <title>General task topic</title>
        <p>The following code sample shows how the
            <xmlelement>taskbody</xmlelement>element contains building
          blocks of a general task topic:</p>
        <codeblock>&lt;task id="completing-group-project">
  &lt;title>Completing the final project&lt;/title>
  &lt;shortdesc>This handout contains information about completing the final project 
      for History 275, "Exploring your community history."&lt;/shortdesc>
  <b>&lt;taskbody></b>
    &lt;context>The final project will account for 35% of your final grade.&lt;/context>
    &lt;prereq>You must have an account on the college's collaboration platform.&lt;/prereq>
    &lt;section>
      &lt;title>Required reading&lt;/title>
      &lt;ul>
        &lt;li>Section 7.0 in the class course pack&lt;/li>
        &lt;li>&lt;cite>Using Oral History in Community History Projects
            (Practices in Oral History)&lt;/cite>&lt;/li>
      &lt;/ul>
    &lt;/section>
    &lt;steps>
      &lt;!-- ... -->
    &lt;/steps>
  <b>&lt;/taskbody></b>
&lt;/task></codeblock>
        <p>Note that there is more flexibility in the content model for
            <xmlelement>taskbody</xmlelement> in general task than there is
          in the strict task. In this example,
            <xmlelement>context</xmlelement> precedes
            <xmlelement>prereq</xmlelement>, and
            <xmlelement>prereq</xmlelement> is following by a section
          titled "Required reading".</p>
      </fig>
      <fig rev="review-a">
        <title>General task topic used for reuse</title>
        <p>The following code sample shows the content of a general task
          topic that is used to store <xmlelement>prereq</xmlelement>
          elements that are reused. While the implementation uses the
          strict task topic for their product documentation, using a
          general task topic for a reuse topic enables them to have
          multiple <xmlelement>prereq</xmlelement> elements in a single
          topic.</p>
        <codeblock>&lt;task id="reuse-prereq">
  &lt;title>Reuse topic: &lt;xmlelement>prereq&lt;/xmlelement>&lt;/title>
  &lt;shortdesc>This topic stores &lt;xmlelement>prereq&lt;/xmlelement> elements
             that are reused in the product documentation.&lt;/shortdesc>
  <b>&lt;taskbody></b>
    &lt;!-- ... -->
    &lt;prereq id="sp-10">Service Pack 10 must be installed.&lt;/prereq>
    &lt;prereq id="admin-access">You must have administrator access in order
      to perform this procedure.&lt;/prereq>
    &lt;!-- ... -->
  <b>&lt;/taskbody></b>
&lt;/task></codeblock>
      </fig>
</example>
</refbody>
</reference>

