<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "reference.dtd">
<reference id="fragment" xml:lang="en-us">
  <title><xmlelement>fragment</xmlelement></title>
  <shortdesc>The <xmlelement>fragment</xmlelement> element contains a labeled subpart of the syntax
    within a syntax diagram.</shortdesc>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>syntax diagram
          domain<indexterm><xmlelement>fragment</xmlelement></indexterm></indexterm>
        <indexterm>syntax diagrams<indexterm>fragments</indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <refbody>
    <section id="usage-information">
      <title>Usage information</title>
      <p>The <xmlelement>fragment</xmlelement> element enables breaking out
        logical chunks of a large syntax diagram into named fragments.</p>
    </section>
    <section id="specialization-hierarchy">
      <title>Specialization hierarchy</title>
      <p>The <xmlelement>fragment</xmlelement> element is specialized from
          <xmlelement>figgroup</xmlelement>.  It is defined in the syntax-diagram domain module,
        which is a specialization of the programming domain module.</p>
    </section>
    <section conkeyref="content-models-fragment/fragment.element" id="content-model"/>
    <section id="attributes">
      <title>Attributes</title>
      <p conkeyref="reuse-attributes/only-universal"/>
    </section>
    <example id="example" otherprops="examples">
      <title>Example</title>
      <p>The following code sample shows how the <xmlelement>fragment</xmlelement> element can be
        used to break out a set of related logging options from the larger set of syntax. This
        allows the logging options to be displayed separately in a titled group, out of the flow of
        the primary diagram.</p>
      <codeblock id="example-fragment">&lt;syntaxdiagram&gt;
  &lt;title&gt;Syntax for runprogram command&lt;/title&gt;
  &lt;groupseq&gt;
    &lt;kwd&gt;runprogram&lt;/kwd&gt;
    &lt;groupchoice>
      &lt;groupcomp>&lt;oper>-&lt;/oper>&lt;kwd>i&lt;/kwd>&lt;sep>:&lt;/sep>&lt;var>program-name.py&lt;/var>&lt;/groupcomp>
      &lt;groupcomp>&lt;oper>--&lt;/oper>&lt;kwd>input&lt;/kwd>&lt;sep>=&lt;/sep>&lt;var>program-name.py&lt;/var>&lt;/groupcomp>
    &lt;/groupchoice&gt;
  &lt;/groupseq>
  <b>&lt;fragment></b>
    &lt;title>Logging options&lt;/title>
    &lt;groupseq importance="optional">&lt;oper>--&lt;/oper>&lt;kwd>debug&lt;/kwd>&lt;/groupseq>
    &lt;groupseq importance="optional">&lt;oper>--&lt;/oper>&lt;kwd>verbose&lt;/kwd>&lt;/groupseq>
  <b>&lt;/fragment></b>
&lt;/syntaxdiagram></codeblock></example>
  </refbody>
</reference>
